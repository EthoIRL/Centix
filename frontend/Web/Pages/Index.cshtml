@page
@using frontend
@using frontend.Api.Models
@using frontend.Api.Models.User
@using frontend.Utils
@model frontend.Web.Pages.Index

@{
    Layout = "_Layout.cshtml";

    ModelMediaStats? mediaStats = await Program.ApiUtils.GetModelAsync<ModelMediaStats>(Program.ConfigManager.Config.BackendApiUri + "/stats/media/");
    ModelUserStats? userStats = await Program.ApiUtils.GetModelAsync<ModelUserStats>(Program.ConfigManager.Config.BackendApiUri + "/stats/user/");
    ModelConfig? config = await Program.ApiUtils.GetModelAsync<ModelConfig>(Program.ConfigManager.Config.BackendApiUri + "/services/config");

    int totalContentCount = 0;
    string totalContentSize = "0 MB";

    if (mediaStats != null)
    {
        totalContentCount = mediaStats.media_count;
        totalContentSize = StringUtils.FormatBytesWithIdentifier(mediaStats.media_storage_usage);
    }

    int totalUserCount = 0;

    if (userStats != null)
    {
        totalUserCount = userStats.user_count;
    }

    bool apiDown = mediaStats == null && userStats == null && config == null;

    ModelUserInfo? userInfo = null;
    if (!apiDown && CookieUtils.IsCookieReal(Request, Response))
    {
        var userCredentials = new ModelUserKey
        {
            key = Request.Cookies[CookieUtils.CookieName]
        };

        userInfo = await Program.ApiUtils.PostAndReceiveModel<ModelUserKey, ModelUserInfo>(
            Program.ConfigManager.Config.BackendApiUri + "/user/info", userCredentials);
    }
}

@section AdditionalHead
{
    <title>Home</title>
    <link rel="stylesheet" href="~/Web/Assets/css/Index/Index.css">
    <link rel="stylesheet" href="~/Web/Assets/css/Index/Stats.css">
}

<!DOCTYPE html>

<html lang="en">
<body>
<div class="stats-video-container">
    <div class="stats-container">
        <div class="stats-inner-container">
            @{
                if (userInfo != null)
                {
                    <div class="stats-info-container">
                        <text class="stats-header">Welcome, @userInfo.username.ToUpper()</text>
                        <ul class="stats-list">
                            <li>
                                <text>@userInfo.uploads.Length / @config?.user_upload_limit Files Uploaded</text>
                            </li>
                            <li>
                                @{
                                    if (config?.user_total_upload_size_limit > 0)
                                    {
                                        <text>@StringUtils.FormatBytesWithIdentifier(userInfo.total_upload_size) /
                                            @{
                                        <text>@config.user_total_upload_size_limit</text>
                                            }
                                            mb(s) Used</text>
                                    }
                                    else
                                    {
                                        <text>0 / Unlimited</text>
                                    }
                                }
                            </li>
                        </ul>
                    </div>
                }
            }

            <div class="stats-info-container">
                <text class="stats-header">Instance Stats</text>
                <ul class="stats-list">
                    <li>
                        Api:
                        @{
                            if (apiDown)
                            {
                                <a style="color: red">Offline</a>
                            }
                            else
                            {
                                <a style="color: green">Online</a>
                            }
                        }
                    </li>
                    <li>
                        Serving @totalContentCount Uploads
                    </li>
                    <li>
                        Handling @totalUserCount Users
                    </li>
                    <li>
                        Storing @totalContentSize
                    </li>
                </ul>

                @{
                    if (config?.backend_domains.Length > 1)
                    {
                        <div class="stats-domain-container">
                            <text class="domain-header">DOMAINS</text>
                            <ul class="domain-list">
                                @{
                                    foreach (var domain in config.backend_domains)
                                    {
                                        <li>
                                            @domain
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                    }
                }
            </div>

            <div class="stats-backend-container">
                <div class="stats-footer-text">
                    @* // TODO: Implement both frontend & backend Short SHA git commit versioning *@
                    <text>
                        Backend build - <a href="https://github.com/EthoIRL/Centix">e6c587c</a>
                    </text>
                    <text>
                        Frontend build - <a href="https://github.com/EthoIRL/Centix">e6c587c</a>
                    </text>
                </div>
            </div>
        </div>
    </div>
    <div class="video-container">
        <div class="video-inner-container">

        </div>
    </div>
</div>
</body>
</html>