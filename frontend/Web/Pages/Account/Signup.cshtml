@page "/signup"
@using frontend
@using frontend.Api.Models
@using frontend.Utils
@model frontend.Models.Account.SignupModel

@{
    ModelConfig? config = await Program.ApiUtils.GetModelAsync<ModelConfig>(Program.ConfigManager.Config.BackendApiUri + "/services/config");

    if (config is {registration_allow: false })
    {
        Response.Redirect("/login");
        return;
    }
    
    if (await CookieUtils.IsCookieValid(Program.ApiUtils, Request, Response))
    {
        Response.Redirect("/account");
        return;
    }
    Layout = "../_Layout.cshtml";
}


@section AdditionalHead
{
    <title>Signup</title>
    <link rel="stylesheet" href="~/Web/Assets/css/Generic/Account/Credentials.css">
}

<!DOCTYPE html>

<html>
<body>
<div class="credentials-container">
    @using (Html.BeginForm("signup", "signup", FormMethod.Post, new { @class = "credentials-form-container"}))
    {
        @Html.AntiForgeryToken()
        
        <div class="credentials-container-text">
            Sign up
        </div>
        <div class="credentials-form-text-container">
            <div class="credentials-form-input">
                <label>Username</label>
                @Html.TextBoxFor(model => model.username, null, new {placeholder = "Type your username", maxlength = config?.user_username_limit, autocomplete = "off", required = "required"})
            </div>
            <div class="credentials-form-input">
                <label>Password</label>
                @Html.PasswordFor(model => model.password, new {placeholder = "Type your password", maxlength = config?.user_password_limit, autocomplete = "off", required = "required"})
            </div>
            
            @{
                if (config is {registration_use_invite_keys: true })
                {
                    <div class="credentials-form-input">
                        <label>
                            Invite<label style="color: red">*</label>
                        </label>
                        @Html.TextBoxFor(model => model.invite, null, new { placeholder = "Type your invite key", autocomplete = "off", required = "required"})
                    </div>
                }
                else
                {
                    @Html.TextBoxFor(model => model.invite, null, new { required = "required", type = "hidden"})
                }
            }
        </div>
        <label class="credentials-form-error">
            @Html.ValidationMessage("Error")
        </label>
        <label class="credentials-form-opposite">
            Already have an account? Try
            <a href="/login">
                logging in!
            </a>
        </label>
        <button>Signup</button>
    }
</div>
</body>
</html>